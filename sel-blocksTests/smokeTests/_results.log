

    [info] Executing: |open | http://refactoror.net/_SelBlocks-testpage.html | |
    [info] Test case passed
    [info] Playing test case for
    [info] Executing: |for | s=0,f=3; f <= 5; f++ | |
    [info] Executing: |getEval | LOG.info('f: ${f}') | |
    [info] script is: LOG.info('f: 3')
    [info] f: 3
    [info] Executing: |endFor | | |
    [info] [selblocks] branch => @1: [for|s=0,f=3; f <= 5; f++]
    [info] Executing: |for | s=0,f=3; f <= 5; f++ | |
    [info] Executing: |getEval | LOG.info('f: ${f}') | |
    [info] script is: LOG.info('f: 4')
    [info] f: 4
    [info] Executing: |endFor | | |
    [info] [selblocks] branch => @1: [for|s=0,f=3; f <= 5; f++]
    [info] Executing: |for | s=0,f=3; f <= 5; f++ | |
    [info] Executing: |getEval | LOG.info('f: ${f}') | |
    [info] script is: LOG.info('f: 5')
    [info] f: 5
    [info] Executing: |endFor | | |
    [info] [selblocks] branch => @1: [for|s=0,f=3; f <= 5; f++]
    [info] Executing: |for | s=0,f=3; f <= 5; f++ | |
    [info] [selblocks] branch => @3: [endFor]
    [info] Executing: |endFor | | |
    [info] Test case passed
    [info] Playing test case foreach
    [info] Executing: |foreach | fe | "dilbert", "dogbert", "wally" |
    [info] Executing: |getEval | LOG.info('${_i}) fe: ${fe}') | |
    [info] script is: LOG.info('0) fe: dilbert')
    [info] 0) fe: dilbert
    [info] Executing: |endForeach | | |
    [info] [selblocks] branch => @1: [foreach|fe|"dilbert", "dogbert", "wally"]
    [info] Executing: |foreach | fe | "dilbert", "dogbert", "wally" |
    [info] Executing: |getEval | LOG.info('${_i}) fe: ${fe}') | |
    [info] script is: LOG.info('1) fe: dogbert')
    [info] 1) fe: dogbert
    [info] Executing: |endForeach | | |
    [info] [selblocks] branch => @1: [foreach|fe|"dilbert", "dogbert", "wally"]
    [info] Executing: |foreach | fe | "dilbert", "dogbert", "wally" |
    [info] Executing: |getEval | LOG.info('${_i}) fe: ${fe}') | |
    [info] script is: LOG.info('2) fe: wally')
    [info] 2) fe: wally
    [info] Executing: |endForeach | | |
    [info] [selblocks] branch => @1: [foreach|fe|"dilbert", "dogbert", "wally"]
    [info] Executing: |foreach | fe | "dilbert", "dogbert", "wally" |
    [info] [selblocks] branch => @3: [endForeach]
    [info] Executing: |endForeach | | |
    [info] Test case passed
    [info] Playing test case foreach-xpath
    [info] Executing: |foreach | link | $X("//input") |
    [info] Executing: |getEval | LOG.info('link: ${link}') | |
    [info] script is: LOG.info('link: [object HTMLInputElement]')
    [info] link: [object HTMLInputElement]
    [info] Executing: |endForeach | | |
    [info] [selblocks] branch => @1: [foreach|link|$X("//input")]
    [info] Executing: |foreach | link | $X("//input") |
    [info] Executing: |getEval | LOG.info('link: ${link}') | |
    [info] script is: LOG.info('link: [object HTMLInputElement]')
    [info] link: [object HTMLInputElement]
    [info] Executing: |endForeach | | |
    [info] [selblocks] branch => @1: [foreach|link|$X("//input")]
    [info] Executing: |foreach | link | $X("//input") |
    [info] Executing: |getEval | LOG.info('link: ${link}') | |
    [info] script is: LOG.info('link: [object HTMLInputElement]')
    [info] link: [object HTMLInputElement]
    [info] Executing: |endForeach | | |
    [info] [selblocks] branch => @1: [foreach|link|$X("//input")]
    [info] Executing: |foreach | link | $X("//input") |
    [info] [selblocks] branch => @3: [endForeach]
    [info] Executing: |endForeach | | |
    [info] Test case passed
    [info] Playing test case forjson
    [info] Executing: |forJson | http://refactoror.net/forjson.json | |
    [info] [selblocks] Reading from: http://refactoror.net/forjson.json
    [info] [selblocks] [ { jname: "dilbert" } ,{ jname: "dogbert" } ,{ jname: "wally" } ]
    [info] Executing: |getEval | LOG.info('jname: ${jname}') | |
    [info] script is: LOG.info('jname: dilbert')
    [info] jname: dilbert
    [info] Executing: |endForJson | | |
    [info] [selblocks] branch => @1: [forJson|http://refactoror.net/forjson.json]
    [info] Executing: |forJson | http://refactoror.net/forjson.json | |
    [info] Executing: |getEval | LOG.info('jname: ${jname}') | |
    [info] script is: LOG.info('jname: dogbert')
    [info] jname: dogbert
    [info] Executing: |endForJson | | |
    [info] [selblocks] branch => @1: [forJson|http://refactoror.net/forjson.json]
    [info] Executing: |forJson | http://refactoror.net/forjson.json | |
    [info] Executing: |getEval | LOG.info('jname: ${jname}') | |
    [info] script is: LOG.info('jname: wally')
    [info] jname: wally
    [info] Executing: |endForJson | | |
    [info] [selblocks] branch => @1: [forJson|http://refactoror.net/forjson.json]
    [info] Executing: |forJson | http://refactoror.net/forjson.json | |
    [info] [selblocks] branch => @3: [endForJson]
    [info] Executing: |endForJson | | |
    [info] Test case passed
    [info] Playing test case forxml
    [info] Executing: |forXml | http://refactoror.net/forxml.xml | |
    [info] [selblocks] Reading from: http://refactoror.net/forxml.xml
    [info] Executing: |getEval | LOG.info('xname: ${xname}') | |
    [info] script is: LOG.info('xname: dilbert')
    [info] xname: dilbert
    [info] Executing: |endForXml | | |
    [info] [selblocks] branch => @1: [forXml|http://refactoror.net/forxml.xml]
    [info] Executing: |forXml | http://refactoror.net/forxml.xml | |
    [info] Executing: |getEval | LOG.info('xname: ${xname}') | |
    [info] script is: LOG.info('xname: dogbert')
    [info] xname: dogbert
    [info] Executing: |endForXml | | |
    [info] [selblocks] branch => @1: [forXml|http://refactoror.net/forxml.xml]
    [info] Executing: |forXml | http://refactoror.net/forxml.xml | |
    [info] Executing: |getEval | LOG.info('xname: ${xname}') | |
    [info] script is: LOG.info('xname: wally')
    [info] xname: wally
    [info] Executing: |endForXml | | |
    [info] [selblocks] branch => @1: [forXml|http://refactoror.net/forxml.xml]
    [info] Executing: |forXml | http://refactoror.net/forxml.xml | |
    [info] [selblocks] branch => @3: [endForXml]
    [info] Executing: |endForXml | | |
    [info] Test case passed
    [info] Playing test case function01
    [info] Executing: |call | doSomething | sname = "dilbert,Q", srole = "goof" |
    [info] [selblocks] branch => @3: [function|doSomething|sname]
    [info] Executing: |function | doSomething | sname |
    [info] Executing: |getEval | LOG.info('sname: ${sname}, srole: ${srole}') | |
    [info] script is: LOG.info('sname: dilbert,Q, srole: goof')
    [info] sname: dilbert,Q, srole: goof
    [info] Executing: |endFunction | doSomething | |
    [info] [selblocks] branch => @1: [call|doSomething|sname = "dilbert,Q", srole = "goof"]
    [info] Executing: |call | doSomething | sname = "dilbert,Q", srole = "goof" |
    [info] Executing: |function | doSomething | sname |
    [info] [selblocks] branch => @5: [endFunction|doSomething]
    [info] Executing: |endFunction | doSomething | |
    [info] Executing: |call | doSomething | sname = "dogbert", srole = "woof" |
    [info] [selblocks] branch => @3: [function|doSomething|sname]
    [info] Executing: |function | doSomething | sname |
    [info] Executing: |getEval | LOG.info('sname: ${sname}, srole: ${srole}') | |
    [info] script is: LOG.info('sname: dogbert, srole: woof')
    [info] sname: dogbert, srole: woof
    [info] Executing: |endFunction | doSomething | |
    [info] [selblocks] branch => @7: [call|doSomething|sname = "dogbert", srole = "woof"]
    [info] Executing: |call | doSomething | sname = "dogbert", srole = "woof" |
    [info] Executing: |call | doSomething | sname = "ratbert", srole = "squeak" |
    [info] [selblocks] branch => @3: [function|doSomething|sname]
    [info] Executing: |function | doSomething | sname |
    [info] Executing: |getEval | LOG.info('sname: ${sname}, srole: ${srole}') | |
    [info] script is: LOG.info('sname: ratbert, srole: squeak')
    [info] sname: ratbert, srole: squeak
    [info] Executing: |endFunction | doSomething | |
    [info] [selblocks] branch => @8: [call|doSomething|sname = "ratbert", srole = "squeak"]
    [info] Executing: |call | doSomething | sname = "ratbert", srole = "squeak" |
    [info] Executing: |foreach | sname | "asok", "alice" |
    [info] Executing: |call | doSomething | sname = sname, srole = "super=user" |
    [info] [selblocks] branch => @3: [function|doSomething|sname]
    [info] Executing: |function | doSomething | sname |
    [info] Executing: |getEval | LOG.info('sname: ${sname}, srole: ${srole}') | |
    [info] script is: LOG.info('sname: asok, srole: super=user')
    [info] sname: asok, srole: super=user
    [info] Executing: |endFunction | doSomething | |
    [info] [selblocks] branch => @11: [call|doSomething|sname = sname, srole = "super=user"]
    [info] Executing: |call | doSomething | sname = sname, srole = "super=user" |
    [info] Executing: |endForeach | | |
    [info] [selblocks] branch => @10: [foreach|sname|"asok", "alice"]
    [info] Executing: |foreach | sname | "asok", "alice" |
    [info] Executing: |call | doSomething | sname = sname, srole = "super=user" |
    [info] [selblocks] branch => @3: [function|doSomething|sname]
    [info] Executing: |function | doSomething | sname |
    [info] Executing: |getEval | LOG.info('sname: ${sname}, srole: ${srole}') | |
    [info] script is: LOG.info('sname: alice, srole: super=user')
    [info] sname: alice, srole: super=user
    [info] Executing: |endFunction | doSomething | |
    [info] [selblocks] branch => @11: [call|doSomething|sname = sname, srole = "super=user"]
    [info] Executing: |call | doSomething | sname = sname, srole = "super=user" |
    [info] Executing: |endForeach | | |
    [info] [selblocks] branch => @10: [foreach|sname|"asok", "alice"]
    [info] Executing: |foreach | sname | "asok", "alice" |
    [info] [selblocks] branch => @12: [endForeach]
    [info] Executing: |endForeach | | |
    [info] Test case passed
    [info] Playing test case try05 - catch specific error, then finally
    [info] Executing: |try | t-spec-outer | |
    [warn] [selblocks] @1: [try|t-spec-outer] does not have a catch-block nor a finally-block, and therefore serves no purpose
    [info] Executing: |try | t-spec-inner | |
    [info] Executing: |throw | "blamo inner" | |
    [info] [selblocks] @3, error has been caught :: /blamo inner/
    [info] [selblocks] branch => @5: [catch|/blamo inner/]
    [info] Executing: |catch | /blamo inner/ | |
    [info] Executing: |getEval | LOG.info('_error: ${_error}') | |
    [info] script is: LOG.info('_error: SelblocksError: blamo inner')
    [info] _error: SelblocksError: blamo inner
    [info] Executing: |finally | | |
    [info] Executing: |endTry | t-spec-inner | |
    [info] Executing: |endTry | t-spec-outer | |
    [info] Test case passed
    [info] Test suite completed: 8 played, all passed! 

